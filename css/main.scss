@import "tools";
@import "fonts/clear-sans.css";


$board-size-x: 540px;
$num-cell-x: 5;
$num-cell-y: 5;
$color-empty-cell: #e6e6e6;
$cell-margin: 10px;
$cell-size: ($board-size-x - $cell-margin * ($num-cell-x + 1)) / $num-cell-x;
$board-size-y: ($board-size-x / $num-cell-x) * $num-cell-y;
$tile-border-radius: $cell-size / 2;
$transition-speed: 100ms;


html, body {
  margin: 0;
  padding: 0;

  background: white;
  //color: $text-color;
  font-family:"Roboto", "Helvetica Neue", Arial, sans-serif;
  font-size: 18px;
}

.container {
  width: $board-size-x;
  margin: 0 auto;
}


.game-container {
  position: relative;
  padding: $cell-margin;

  cursor: default;
  -webkit-touch-callout: none;
  //-ms-touch-callout: none;

  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;

  //-ms-touch-action: none;
  touch-action: none;

  //background: $game-container-background;
  //border-radius: $tile-border-radius * 2;
  width: $board-size-x;
  height: $board-size-y;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

.board-container{
  position: absolute;
  z-index: 1;
}

.board-row{
  margin-bottom: $cell-margin;

  &:last-child {
    margin-bottom: 0;
  }

  @include clearfix;
}


.board-cell{
  margin-right: $cell-margin;
  width: $cell-size;
  height: $cell-size;
  float: left;
  background-color: $color-empty-cell;
  //border: 1px solid white;
  border-radius: $tile-border-radius;

  &:last-child{
    margin-right: 0;
  }
}

.pieces-container{
  position: absolute;
  z-index: 2;
}

.piece {
  &, .piece-inner {
    width: ceil($cell-size);
    height: ceil($cell-size);
    line-height: ceil($cell-size);
    //@include material-Shadow;
  }

  // Build position classes
  @for $x from 0 through $num-cell-x  {
    @for $y from 0 through $num-cell-y {
      &.piece-position-#{$x}-#{$y} {
        $xPos: floor(($cell-size + $cell-margin) * ($x));
        $yPos: floor(($cell-size + $cell-margin) * ($y));
        @include transform(translate($xPos, $yPos));

      }
    }
  }


}

.piece {
  position: absolute; // Makes transforms relative to the top-left corner

  .piece-inner {
    border-radius: $tile-border-radius;
    //background: black;
    text-align: center;
    font-weight: bold;
    //color:white;
    z-index: 10;
    font-size: 35px;


  }

  // Movement transition
  @include transition($transition-speed ease-in-out);
  -webkit-transition-property: -webkit-transform;
  -moz-transition-property: -moz-transform;
  transition-property: transform;
}

/*
 * Modifiers
 */

.piece-a .piece-inner {
  background-color: #f30053;
  color: white;

}

.piece-b .piece-inner {
  background-color: #00bcd4;
  color: white;
}



/*
 * Animation class
 */




.piece-new .piece-inner {
  z-index: 20;
  @include animation(appear $transition-speed * 2 ease $transition-speed);
  @include animation-fill-mode(backwards);
}

.piece-disappear .piece-inner{
  z-index: 20;
  @include animation(disappear $transition-speed * 4 ease $transition-speed);
  @include animation-fill-mode(forwards);

}






/*
 * Animation keyframes
 */





@include keyframes(appear) {
  0% {
    @include transform(scale(0));
  }

  50% {
    @include transform(scale(1.2));
  }

  100% {
    @include transform(scale(1));
  }
}


@include keyframes(disappear) {
  0% {

    @include transform(scale(1));

  }

  50% {
    @include transform(scale(1.2));

  }

  100% {
    @include transform(scale(0));
  }
}


